/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardLayoutRouteImport } from './routes/dashboard/layout'
import { Route as authLayoutRouteImport } from './routes/(auth)/layout'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as authResetPasswordRouteImport } from './routes/(auth)/reset-password'
import { Route as authRegisterRouteImport } from './routes/(auth)/register'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as DashboardSettingsIndexRouteImport } from './routes/dashboard/settings/index'
import { Route as DashboardChatIndexRouteImport } from './routes/dashboard/chat/index'
import { Route as authTwoFactorIndexRouteImport } from './routes/(auth)/two-factor/index'
import { Route as DashboardChatVercelRouteImport } from './routes/dashboard/chat/vercel'
import { Route as DashboardChatRagRouteImport } from './routes/dashboard/chat/rag'
import { Route as authTwoFactorOtpRouteImport } from './routes/(auth)/two-factor/otp'
import { Route as authAcceptInvitationInvitationIdIndexRouteImport } from './routes/(auth)/accept-invitation/$invitationId/index'

// Create/Update Routes

const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const authLayoutRoute = authLayoutRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const publicIndexRoute = publicIndexRouteImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authResetPasswordRoute = authResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => authLayoutRoute,
} as any)

const authRegisterRoute = authRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authLayoutRoute,
} as any)

const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authLayoutRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authLayoutRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardChatIndexRoute = DashboardChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const authTwoFactorIndexRoute = authTwoFactorIndexRouteImport.update({
  id: '/two-factor/',
  path: '/two-factor/',
  getParentRoute: () => authLayoutRoute,
} as any)

const DashboardChatVercelRoute = DashboardChatVercelRouteImport.update({
  id: '/chat/vercel',
  path: '/chat/vercel',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardChatRagRoute = DashboardChatRagRouteImport.update({
  id: '/chat/rag',
  path: '/chat/rag',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const authTwoFactorOtpRoute = authTwoFactorOtpRouteImport.update({
  id: '/two-factor/otp',
  path: '/two-factor/otp',
  getParentRoute: () => authLayoutRoute,
} as any)

const authAcceptInvitationInvitationIdIndexRoute =
  authAcceptInvitationInvitationIdIndexRouteImport.update({
    id: '/accept-invitation/$invitationId/',
    path: '/accept-invitation/$invitationId/',
    getParentRoute: () => authLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
    '/(auth)/two-factor/otp': {
      id: '/(auth)/two-factor/otp'
      path: '/two-factor/otp'
      fullPath: '/two-factor/otp'
      preLoaderRoute: typeof authTwoFactorOtpRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
    '/dashboard/chat/rag': {
      id: '/dashboard/chat/rag'
      path: '/chat/rag'
      fullPath: '/dashboard/chat/rag'
      preLoaderRoute: typeof DashboardChatRagRouteImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
    '/dashboard/chat/vercel': {
      id: '/dashboard/chat/vercel'
      path: '/chat/vercel'
      fullPath: '/dashboard/chat/vercel'
      preLoaderRoute: typeof DashboardChatVercelRouteImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
    '/(auth)/two-factor/': {
      id: '/(auth)/two-factor/'
      path: '/two-factor'
      fullPath: '/two-factor'
      preLoaderRoute: typeof authTwoFactorIndexRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
    '/dashboard/chat/': {
      id: '/dashboard/chat/'
      path: '/chat'
      fullPath: '/dashboard/chat'
      preLoaderRoute: typeof DashboardChatIndexRouteImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport
      parentRoute: typeof DashboardLayoutRouteImport
    }
    '/(auth)/accept-invitation/$invitationId/': {
      id: '/(auth)/accept-invitation/$invitationId/'
      path: '/accept-invitation/$invitationId'
      fullPath: '/accept-invitation/$invitationId'
      preLoaderRoute: typeof authAcceptInvitationInvitationIdIndexRouteImport
      parentRoute: typeof authLayoutRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/(auth)/layout' {
  const createFileRoute: CreateFileRoute<
    '/(auth)',
    FileRoutesByPath['/(auth)']['parentRoute'],
    FileRoutesByPath['/(auth)']['id'],
    FileRoutesByPath['/(auth)']['path'],
    FileRoutesByPath['/(auth)']['fullPath']
  >
}
declare module './routes/dashboard/layout' {
  const createFileRoute: CreateFileRoute<
    '/dashboard',
    FileRoutesByPath['/dashboard']['parentRoute'],
    FileRoutesByPath['/dashboard']['id'],
    FileRoutesByPath['/dashboard']['path'],
    FileRoutesByPath['/dashboard']['fullPath']
  >
}
declare module './routes/(auth)/forgot-password' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/forgot-password',
    FileRoutesByPath['/(auth)/forgot-password']['parentRoute'],
    FileRoutesByPath['/(auth)/forgot-password']['id'],
    FileRoutesByPath['/(auth)/forgot-password']['path'],
    FileRoutesByPath['/(auth)/forgot-password']['fullPath']
  >
}
declare module './routes/(auth)/login' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/login',
    FileRoutesByPath['/(auth)/login']['parentRoute'],
    FileRoutesByPath['/(auth)/login']['id'],
    FileRoutesByPath['/(auth)/login']['path'],
    FileRoutesByPath['/(auth)/login']['fullPath']
  >
}
declare module './routes/(auth)/register' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/register',
    FileRoutesByPath['/(auth)/register']['parentRoute'],
    FileRoutesByPath['/(auth)/register']['id'],
    FileRoutesByPath['/(auth)/register']['path'],
    FileRoutesByPath['/(auth)/register']['fullPath']
  >
}
declare module './routes/(auth)/reset-password' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/reset-password',
    FileRoutesByPath['/(auth)/reset-password']['parentRoute'],
    FileRoutesByPath['/(auth)/reset-password']['id'],
    FileRoutesByPath['/(auth)/reset-password']['path'],
    FileRoutesByPath['/(auth)/reset-password']['fullPath']
  >
}
declare module './routes/(public)/index' {
  const createFileRoute: CreateFileRoute<
    '/(public)/',
    FileRoutesByPath['/(public)/']['parentRoute'],
    FileRoutesByPath['/(public)/']['id'],
    FileRoutesByPath['/(public)/']['path'],
    FileRoutesByPath['/(public)/']['fullPath']
  >
}
declare module './routes/dashboard/index' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/',
    FileRoutesByPath['/dashboard/']['parentRoute'],
    FileRoutesByPath['/dashboard/']['id'],
    FileRoutesByPath['/dashboard/']['path'],
    FileRoutesByPath['/dashboard/']['fullPath']
  >
}
declare module './routes/(auth)/two-factor/otp' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/two-factor/otp',
    FileRoutesByPath['/(auth)/two-factor/otp']['parentRoute'],
    FileRoutesByPath['/(auth)/two-factor/otp']['id'],
    FileRoutesByPath['/(auth)/two-factor/otp']['path'],
    FileRoutesByPath['/(auth)/two-factor/otp']['fullPath']
  >
}
declare module './routes/dashboard/chat/rag' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/chat/rag',
    FileRoutesByPath['/dashboard/chat/rag']['parentRoute'],
    FileRoutesByPath['/dashboard/chat/rag']['id'],
    FileRoutesByPath['/dashboard/chat/rag']['path'],
    FileRoutesByPath['/dashboard/chat/rag']['fullPath']
  >
}
declare module './routes/dashboard/chat/vercel' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/chat/vercel',
    FileRoutesByPath['/dashboard/chat/vercel']['parentRoute'],
    FileRoutesByPath['/dashboard/chat/vercel']['id'],
    FileRoutesByPath['/dashboard/chat/vercel']['path'],
    FileRoutesByPath['/dashboard/chat/vercel']['fullPath']
  >
}
declare module './routes/(auth)/two-factor/index' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/two-factor/',
    FileRoutesByPath['/(auth)/two-factor/']['parentRoute'],
    FileRoutesByPath['/(auth)/two-factor/']['id'],
    FileRoutesByPath['/(auth)/two-factor/']['path'],
    FileRoutesByPath['/(auth)/two-factor/']['fullPath']
  >
}
declare module './routes/dashboard/chat/index' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/chat/',
    FileRoutesByPath['/dashboard/chat/']['parentRoute'],
    FileRoutesByPath['/dashboard/chat/']['id'],
    FileRoutesByPath['/dashboard/chat/']['path'],
    FileRoutesByPath['/dashboard/chat/']['fullPath']
  >
}
declare module './routes/dashboard/settings/index' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/settings/',
    FileRoutesByPath['/dashboard/settings/']['parentRoute'],
    FileRoutesByPath['/dashboard/settings/']['id'],
    FileRoutesByPath['/dashboard/settings/']['path'],
    FileRoutesByPath['/dashboard/settings/']['fullPath']
  >
}
declare module './routes/(auth)/accept-invitation/$invitationId/index' {
  const createFileRoute: CreateFileRoute<
    '/(auth)/accept-invitation/$invitationId/',
    FileRoutesByPath['/(auth)/accept-invitation/$invitationId/']['parentRoute'],
    FileRoutesByPath['/(auth)/accept-invitation/$invitationId/']['id'],
    FileRoutesByPath['/(auth)/accept-invitation/$invitationId/']['path'],
    FileRoutesByPath['/(auth)/accept-invitation/$invitationId/']['fullPath']
  >
}

// Create and export the route tree

interface authLayoutRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authTwoFactorOtpRoute: typeof authTwoFactorOtpRoute
  authTwoFactorIndexRoute: typeof authTwoFactorIndexRoute
  authAcceptInvitationInvitationIdIndexRoute: typeof authAcceptInvitationInvitationIdIndexRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authTwoFactorOtpRoute: authTwoFactorOtpRoute,
  authTwoFactorIndexRoute: authTwoFactorIndexRoute,
  authAcceptInvitationInvitationIdIndexRoute:
    authAcceptInvitationInvitationIdIndexRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface DashboardLayoutRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardChatRagRoute: typeof DashboardChatRagRoute
  DashboardChatVercelRoute: typeof DashboardChatVercelRoute
  DashboardChatIndexRoute: typeof DashboardChatIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardChatRagRoute: DashboardChatRagRoute,
  DashboardChatVercelRoute: DashboardChatVercelRoute,
  DashboardChatIndexRoute: DashboardChatIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof publicIndexRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/two-factor/otp': typeof authTwoFactorOtpRoute
  '/dashboard/chat/rag': typeof DashboardChatRagRoute
  '/dashboard/chat/vercel': typeof DashboardChatVercelRoute
  '/two-factor': typeof authTwoFactorIndexRoute
  '/dashboard/chat': typeof DashboardChatIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/accept-invitation/$invitationId': typeof authAcceptInvitationInvitationIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof publicIndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/dashboard': typeof DashboardIndexRoute
  '/two-factor/otp': typeof authTwoFactorOtpRoute
  '/dashboard/chat/rag': typeof DashboardChatRagRoute
  '/dashboard/chat/vercel': typeof DashboardChatVercelRoute
  '/two-factor': typeof authTwoFactorIndexRoute
  '/dashboard/chat': typeof DashboardChatIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/accept-invitation/$invitationId': typeof authAcceptInvitationInvitationIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(public)/': typeof publicIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/(auth)/two-factor/otp': typeof authTwoFactorOtpRoute
  '/dashboard/chat/rag': typeof DashboardChatRagRoute
  '/dashboard/chat/vercel': typeof DashboardChatVercelRoute
  '/(auth)/two-factor/': typeof authTwoFactorIndexRoute
  '/dashboard/chat/': typeof DashboardChatIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/(auth)/accept-invitation/$invitationId/': typeof authAcceptInvitationInvitationIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/dashboard/'
    | '/two-factor/otp'
    | '/dashboard/chat/rag'
    | '/dashboard/chat/vercel'
    | '/two-factor'
    | '/dashboard/chat'
    | '/dashboard/settings'
    | '/accept-invitation/$invitationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/dashboard'
    | '/two-factor/otp'
    | '/dashboard/chat/rag'
    | '/dashboard/chat/vercel'
    | '/two-factor'
    | '/dashboard/chat'
    | '/dashboard/settings'
    | '/accept-invitation/$invitationId'
  id:
    | '__root__'
    | '/(auth)'
    | '/dashboard'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(auth)/reset-password'
    | '/(public)/'
    | '/dashboard/'
    | '/(auth)/two-factor/otp'
    | '/dashboard/chat/rag'
    | '/dashboard/chat/vercel'
    | '/(auth)/two-factor/'
    | '/dashboard/chat/'
    | '/dashboard/settings/'
    | '/(auth)/accept-invitation/$invitationId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  publicIndexRoute: typeof publicIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  publicIndexRoute: publicIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/dashboard",
        "/(public)/"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/layout.tsx",
      "children": [
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/register",
        "/(auth)/reset-password",
        "/(auth)/two-factor/otp",
        "/(auth)/two-factor/",
        "/(auth)/accept-invitation/$invitationId/"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/layout.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/chat/rag",
        "/dashboard/chat/vercel",
        "/dashboard/chat/",
        "/dashboard/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx",
      "parent": "/(auth)"
    },
    "/(public)/": {
      "filePath": "(public)/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/(auth)/two-factor/otp": {
      "filePath": "(auth)/two-factor/otp.tsx",
      "parent": "/(auth)"
    },
    "/dashboard/chat/rag": {
      "filePath": "dashboard/chat/rag.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/chat/vercel": {
      "filePath": "dashboard/chat/vercel.tsx",
      "parent": "/dashboard"
    },
    "/(auth)/two-factor/": {
      "filePath": "(auth)/two-factor/index.tsx",
      "parent": "/(auth)"
    },
    "/dashboard/chat/": {
      "filePath": "dashboard/chat/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx",
      "parent": "/dashboard"
    },
    "/(auth)/accept-invitation/$invitationId/": {
      "filePath": "(auth)/accept-invitation/$invitationId/index.tsx",
      "parent": "/(auth)"
    }
  }
}
ROUTE_MANIFEST_END */
